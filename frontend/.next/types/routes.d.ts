// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/about" | "/admin/dashboard" | "/admin/orders" | "/admin/products" | "/admin/products/[id]/edit" | "/admin/products/new" | "/admin/users" | "/cart" | "/checkout" | "/contact" | "/dashboard" | "/faq" | "/login" | "/orders" | "/products" | "/products/[slug]" | "/profile" | "/register"
type PageRoutes = never
type LayoutRoutes = "/" | "/admin"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/about": {}
  "/admin": {}
  "/admin/dashboard": {}
  "/admin/orders": {}
  "/admin/products": {}
  "/admin/products/[id]/edit": { "id": string; }
  "/admin/products/new": {}
  "/admin/users": {}
  "/cart": {}
  "/checkout": {}
  "/contact": {}
  "/dashboard": {}
  "/faq": {}
  "/login": {}
  "/orders": {}
  "/products": {}
  "/products/[slug]": { "slug": string; }
  "/profile": {}
  "/register": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/admin": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
